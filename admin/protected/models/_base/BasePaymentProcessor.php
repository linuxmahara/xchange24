<?php

/**
 * This is the model base class for the table "payment_processor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PaymentProcessor".
 *
 * Columns in table "payment_processor" available as properties of the model,
 * followed by relations of table "payment_processor" available as properties of the model.
 *
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property integer $is_send
 * @property integer $is_receive
 * @property integer $send_fees
 * @property integer $receive_fees
 * @property integer $Reserve
 * @property double $send_extra
 * @property double $receive_extra
 *
 * @property Rates[] $rates
 * @property Rates[] $rates1
 */
abstract class BasePaymentProcessor extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'payment_processor';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PaymentProcessor|PaymentProcessors', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('code, name, is_send, is_receive, send_fees, receive_fees, Reserve, send_extra, receive_extra', 'required'),
			array('is_send, is_receive, send_fees, receive_fees, Reserve', 'numerical', 'integerOnly'=>true),
			array('send_extra, receive_extra', 'numerical'),
			array('code', 'length', 'max'=>10),
			array('name', 'length', 'max'=>150),
			array('id, code, name, is_send, is_receive, send_fees, receive_fees, Reserve, send_extra, receive_extra', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'rates' => array(self::HAS_MANY, 'Rates', 'from_proc'),
			'rates1' => array(self::HAS_MANY, 'Rates', 'to_proc'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'code' => Yii::t('app', 'Code'),
			'name' => Yii::t('app', 'Name'),
			'is_send' => Yii::t('app', 'Is Send'),
			'is_receive' => Yii::t('app', 'Is Receive'),
			'send_fees' => Yii::t('app', 'Send Fees'),
			'receive_fees' => Yii::t('app', 'Receive Fees'),
			'Reserve' => Yii::t('app', 'Reserve'),
			'send_extra' => Yii::t('app', 'Send Extra'),
			'receive_extra' => Yii::t('app', 'Receive Extra'),
			'rates' => null,
			'rates1' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('is_send', $this->is_send);
		$criteria->compare('is_receive', $this->is_receive);
		$criteria->compare('send_fees', $this->send_fees);
		$criteria->compare('receive_fees', $this->receive_fees);
		$criteria->compare('Reserve', $this->Reserve);
		$criteria->compare('send_extra', $this->send_extra);
		$criteria->compare('receive_extra', $this->receive_extra);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}